<template>
	<view style="background-color: #FFF;">
		<view class="navBox" :style="{ 'margin-top': statusHeight + 'px' }">
			<text v-for="(item, index) in navList" :key="index" class="navTitle" :class="{ currTitle: currId == item.id }" @tap="change(item.id)">{{ item.name }}</text>
		</view>
		<view :class="currId == navList[1].id ? 'hidden-box' : ''" v-if="bodyHeight">
			<view class="msg">
				<image class="msg-bg" src="/static/image/bg_tz_y.png" mode="aspectFill"></image>
				<view class="msg-box">
					<text class="msg-font">重要通知第一时间知晓,开启消息通知~</text>
					<view class="msg-btn"><text class="msg-font">去开启</text></view>
					<view class="colse-box"><image src="/static/image/icon/icon_close_yellow.png" class="msg-close-btn"></image></view>
				</view>
			</view>

			<conversation_view ref="conversationView" style="width: 750rpx;" :style="{ height: bodyHeight }"></conversation_view>
		</view>
		<view :class="currId == navList[0].id ? 'hidden-box' : ''">
			<!-- <contact_view ref="contactView" :style="[{ width: width }, { height: bodyHeight }]"></contact_view> -->
			<text class="type-title">签约客户</text>
			<view class="user-list">
				<uni-swipe-action>
					<uni-swipe-action-item :options="options" v-for="(item, index) in list1" :key="index" btnMargin="0" @click="delBtn(item, index)">
						<view class="user-list-box">
							<image class="user-head" src="/static/image/login/mobileBG.png" mode="aspectFill"></image>
							<text class="user-name">{{ item.name }}</text>
						</view>
					</uni-swipe-action-item>
				</uni-swipe-action>
			</view>

			<text class="type-title">咨询客户</text>
			<view class="user-list">
				<uni-swipe-action>
					<uni-swipe-action-item :options="options" v-for="(item, index) in list1" :key="index" btnMargin="0" @click="delBtn(item, index)">
						<view class="user-list-box">
							<image class="user-head" src="/static/image/login/mobileBG.png" mode="aspectFill"></image>
							<text class="user-name">{{ item.name }}</text>
						</view>
					</uni-swipe-action-item>
				</uni-swipe-action>
			</view>
		</view>
	</view>
</template>

<script>
import uniSwipeAction from '@/components/uni-swipe-action/uni-swipe-action.vue';
import uniSwipeActionItem from '@/components/uni-swipe-action-item/uni-swipe-action-item.vue';

let sdkwx = uni.requireNativePlugin('TIM-SdkWX');

export default {
	components: {
		uniSwipeAction,
		uniSwipeActionItem
	},
	data() {
		return {
			type: 1,
			conversationId: '',
			statusHeight: 0,
			bodyHeight: 0,

			userInfo: {},

			options: [
				{
					text: '删除',
					style: {
						backgroundColor: '#EE455A',
						fontSize: '26rpx'
					}
				}
			],

			navList: [
				{
					name: '聊天记录',
					id: 1
				},
				{
					name: '通讯录',
					id: 2
				}
			],
			currId: 1,

			list1: [
				{
					name: '小名小名小名小名小名小名小名小名小名小名小名'
				},
				{
					name: '小名'
				},
				{
					name: '小名'
				}
			]
		};
	},
	mounted() {
		setTimeout(() => {
			let conversationView = this.$refs.conversationView;
			conversationView.setTapCallback(res => {
				this.navToChat(res);
			});
		}, 0);
	},
	onLoad() {
		this.getHeight();
		if (uni.getStorageSync('userInfo')) {
			this.userInfo = JSON.parse(uni.getStorageSync('userInfo'));
			this.timLogin();
		} else {
			uni.reLaunch({
				url: '/pages/login/mobilePassword'
			});
		}
	},
	methods: {
		timLogin() {
			//登录
			let userId = String(this.userInfo.userId);
			let userSig = this.userInfo.userSig; //参考腾讯官方文档
			sdkwx.login(userId, userSig, function(res) {
				console.log(res);
				if (res.code == 0 || res.code == '0') {
					let busiId = '17378'; //busiId腾讯后台生成
					//设置推送token
					sdkwx.setToken(busiId, function(res2) {
						console.log(res);
					});
				}
			});
		},

		navToChat(res) {
			console.log(res);
			uni.setStorageSync('toUserId', res.conversationId);
			let path = './chat?type=' + res.type + '&conversationId=' + res.conversationId;
			uni.navigateTo({
				url: path
			});
		},

		change(e) {
			this.currId = e;
		},

		getHeight() {
			uni.getSystemInfo({
				success: res => {
					this.statusHeight = res.statusBarHeight;
					this.bodyHeight = res.windowHeight - res.statusBarHeight - (res.windowHeight / 750) * 358;
				}
			});
		}
	}
};
</script>

<style lang="scss" scoped>
.navBox {
	padding-top: 88rpx;
	flex-direction: row;
	align-items: center;
	margin: 0 0 50rpx 30rpx;
}

.navTitle {
	font-size: 40rpx;
	line-height: 56rpx;
	color: #cccccc;
	margin-right: 50rpx;
}

.currTitle {
	font-size: 50rpx;
	color: #333333;
}

.msg {
	padding-left: 30rpx;
}

.msg-bg {
	width: 690rpx;
	height: 100rpx;
	overflow: hidden;
}

.msg-box {
	position: absolute;
	flex-direction: row;
	align-items: center;
	padding: 30rpx 20rpx 30rpx 30rpx;
}

.msg-font {
	color: #946934;
	font-size: 26rpx;
	line-height: 38rpx;
}

.msg-btn {
	height: 50rpx;
	width: 120rpx;
	text-align: center;
	justify-content: center;
	align-items: center;
	background-color: #ffd78d;
	margin-left: 20rpx;
}

.colse-box {
	background-color: #ffffff;
	height: 38rpx;
	width: 38rpx;
	border-radius: 19rpx;
	align-items: center;
	justify-content: center;
	margin-left: 20rpx;
}

.msg-close-btn {
	width: 17rpx;
	height: 18rpx;
}

.type-title {
	margin: 0 0 35rpx 30rpx;
	font-size: 28rpx;
	line-height: 40rpx;
	color: $group-color;
}

.user-list {
	margin-bottom: 40rpx;
	padding: 0 30rpx;
}

.user-list-box {
	flex-direction: row;
	align-items: center;
}

.user-head {
	width: 100rpx;
	height: 100rpx;
	border-radius: 50rpx;
}

.user-name {
	flex: 1;
	border-bottom-width: 1rpx;
	border-bottom-color: #eff0f4;
	font-size: 40rpx;
	line-height: 130rpx;
	margin-left: 20rpx;
	text-overflow: ellipsis;
	lines: 1;
}

.hidden-box {
	height: 0;
	overflow: hidden;
}
</style>
